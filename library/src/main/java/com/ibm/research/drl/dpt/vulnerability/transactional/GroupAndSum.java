/*******************************************************************
 *                                                                 *
 * Copyright IBM Corp. 2022                                        *
 *                                                                 *
 *******************************************************************/
package com.ibm.research.drl.dpt.vulnerability.transactional;

import com.ibm.research.drl.dpt.datasets.IPVDataset;

import java.util.*;

public class GroupAndSum {
    public static Map<String, Double> groupAndSum(IPVDataset dataset, int userIDColumn, int sumColumn) {
        
        Map<String, Double> values = new HashMap<>();

        for (List<String> row : dataset) {
            String userID = row.get(userIDColumn);
            Double amount = Double.parseDouble(row.get(sumColumn));

            values.merge(userID, amount, Double::sum);
        }
        
        return values;
    }
    
    public static List<Integer> offendingTransactions(IPVDataset dataset, int userIDColumn, int sumColumn, double threshold) {
        List<Integer> offendingRows = new ArrayList<>();
        
        Map<String, Double> values = groupAndSum(dataset, userIDColumn, sumColumn);
        
        Set<String> offendingUserIDs = new HashSet<>();
        values.forEach((x, y) -> {
            if (y >= threshold) {
                offendingUserIDs.add(x);
            }
        });

        for(int i = 0; i < dataset.getNumberOfRows(); i++) {
            String userID = dataset.get(i, userIDColumn);
            if (offendingUserIDs.contains(userID)) {
                offendingRows.add(i);
            }
        }
        
        return offendingRows;
    } 
}
