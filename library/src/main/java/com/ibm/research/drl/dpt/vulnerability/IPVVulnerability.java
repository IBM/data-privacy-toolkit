/*******************************************************************
 *                                                                 *
 * Copyright IBM Corp. 2021                                        *
 *                                                                 *
 *******************************************************************/
package com.ibm.research.drl.dpt.vulnerability;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.ibm.research.drl.dpt.generators.ItemSet;

import java.io.Serializable;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class IPVVulnerability implements Serializable {
    private ItemSet itemSet;
    private Integer k;

    /**
     * Instantiates a new Ipv vulnerability.
     *
     * @param itemSet the item set
     */
    public IPVVulnerability(ItemSet itemSet) {
        this.itemSet = itemSet;
    }

    @JsonCreator
    public IPVVulnerability(@JsonProperty("itemSet") ItemSet itemSet, @JsonProperty(value = "k") Integer k) {
        this.itemSet = itemSet;
        this.k = k;
    }

    @Override
    public int hashCode() {
        return itemSet.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (null != obj) {
            if (obj == this) return true;

            if (obj.getClass().equals(this.getClass())) {
                IPVVulnerability vulnerability = (IPVVulnerability) obj;
                if (null == this.itemSet) {
                    return null == vulnerability.itemSet;
                } else {
                    return this.itemSet.equals(vulnerability.itemSet);
                }
            }
        }
        return false;
    }

    /**
     * Gets item set.
     *
     * @return the item set
     */
    public ItemSet getItemSet() {
        return itemSet;
    }

    /**
     * Sets item set.
     *
     * @param itemSet the item set
     */
    public void setItemSet(ItemSet itemSet) {
        this.itemSet = itemSet;
    }

    @Override
    public String toString() {
        if (null == k) {
            return itemSet.toString();
        } else {
            return itemSet.toString() + " " + k;
        }
    }

    /**
     * Contains boolean.
     *
     * @param columnIndex the column index
     * @return the boolean
     */
    public boolean contains(int columnIndex) {
        return itemSet.getItems().contains(columnIndex);
    }

    public Integer getK() {
        return k;
    }
}
