/*******************************************************************
 *                                                                 *
 * Copyright IBM Corp. 2019                                        *
 *                                                                 *
 *******************************************************************/
package com.ibm.research.drl.dpt.spark.vulnerability;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.TreeNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.ibm.research.drl.dpt.exceptions.MisconfigurationException;

import java.util.Collections;
import java.util.Objects;
import java.util.Set;

public class VulnerabilityDetectionOptions {
    private final Set<String> excludedFields;
    private final int k;
    private final VulnerabilityDetectionStrategy strategy;
    private final int maxSize;

    private final boolean report;

    public static VulnerabilityDetectionOptions fromJson(TreeNode n) throws JsonProcessingException {
        return  new ObjectMapper().treeToValue(n, VulnerabilityDetectionOptions.class);
    }

    @JsonCreator
    public VulnerabilityDetectionOptions(
            @JsonProperty(value = "k", required = true) int k,
            @JsonProperty(value = "excludedFields", defaultValue = "[]") Set<String> excludedFields,
            @JsonProperty(value = "strategy", required = true) VulnerabilityDetectionStrategy strategy,
            @JsonProperty(value = "maxSize", defaultValue = "-1") int maxSize,
            @JsonProperty(value = "report", defaultValue = "false") boolean report) {
        this.report = report;
        this.strategy = strategy;
        this.maxSize = maxSize;
        if (k <= 1) throw new MisconfigurationException("K value must be greater that 1 ( " + k + " was passed)");
        this.k = k;
        this.excludedFields = Objects.isNull(excludedFields) ? Collections.emptySet() : excludedFields;
    }

    public Set<String> getExcludedFields() {
        return excludedFields;
    }

    public int getK() {
        return k;
    }

    public VulnerabilityDetectionStrategy getStrategy() { return strategy; }

    public boolean isReport() {
        return report;
    }

    public int getMaxSize() {
        return maxSize;
    }
}
